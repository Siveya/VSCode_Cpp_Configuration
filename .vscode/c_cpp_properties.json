{
    "configurations": [
        {
            "name": "Linux clang",
            // 指定代码中使用的头文件路径列表。
            "includePath": [
                "${workspaceFolder}/**"
            ],
            // 定义预处理宏（如 #define 宏）。
            "defines": [],
            // 指定编译器路径
            "compilerPath": "/usr/bin/clang",
            // 指定 C 和 C++ 标准。
            "cStandard": "c17",
            "cppStandard": "c++20",
            // 指定 IntelliSense 模式
            "intelliSenseMode": "${default}",
            // VSCode 会使用 CMake Tools 插件来生成 IntelliSense 配置。
            // 这样做可以不用手动配置 includePath 和 defines。
            "configurationProvider": "ms-vscode.cmake-tools",
            // 指定 IntelliSense 的浏览配置。
            "browse": {
                "path": [
                    "${workspaceFolder}"
                ],
                // 限制符号只包含在包含的头文件中。
                "limitSymbolsToIncludedHeaders": true
            }
        },
        {
            "name": "Linux gcc",
            "includePath": [
                "${workspaceFolder}/**"
            ],
            "defines": [],
            "compilerPath": "/usr/bin/g++",
            "cStandard": "c17",
            "cppStandard": "c++20",
            "intelliSenseMode": "${default}",
            "configurationProvider": "ms-vscode.cmake-tools",
            "browse": {
                "path": [
                    "${workspaceFolder}"
                ],
                "limitSymbolsToIncludedHeaders": true
            }
        },
        {
            "name": "macOS Clang",
            "includePath": [
                "${workspaceFolder}/**"
            ],
            "defines": [],
            "compilerPath": "/usr/bin/clang++",
            "cStandard": "c17",
            "cppStandard": "c++20",
            "intelliSenseMode": "${default}",
            "configurationProvider": "ms-vscode.cmake-tools",
            "browse": {
                "path": [
                    "${workspaceFolder}"
                ],
                "limitSymbolsToIncludedHeaders": true
            },
            // 指定 macOS 框架路径
            "macFrameworkPath": [
                "/Library/Frameworks",
                "/System/Library/Frameworks"
            ]
        },
        {
            "name": "macOS GCC",
            "includePath": [
                "${workspaceFolder}/**"
            ],
            "defines": [],
            "compilerPath": "/usr/bin/g++",
            "cStandard": "c17",
            "cppStandard": "c++20",
            "intelliSenseMode": "macos-gcc-x64",
            "configurationProvider": "ms-vscode.cmake-tools",
            "browse": {
                "path": [
                    "${workspaceFolder}"
                ],
                "limitSymbolsToIncludedHeaders": true
            }
        },
        // C_Cpp: IntelliSenseEngine 的开关打开 (装了 clang，你将无法把 C_Cpp：Intelli Sense Engine 开关设置为 Default, 需卸载clangd)
        {
            "name": "Win32",
            "includePath": [
                "${workspaceFolder}/**"
            ],
            "defines": [
                "_DEBUG",
                "UNICODE",
                "_UNICODE"
            ],
            "windowsSdkVersion": "10.0.22000.0",
            "compilerPath": "cl.exe",
            "cStandard": "c17",
            "cppStandard": "c++20",
            "intelliSenseMode": "windows-msvc-x64",
            "configurationProvider": "ms-vscode.cmake-tools"
        }
    ],
    "version": 4
}
